Write a program that opens a MongoDB database '{bold}learnmymongodb{/bold}',
create a new collection '{bold}test2{/bold}', insert a document into
the collection just created, '{bold}test2{/bold}' and return this document
as part of a query excluding the '{bold}_id{/bold}' (ObjectID) of the
document.

The document should be written as:

{blue}{bold}{
	"Learning" : "MongoDB"
}{/blue}{/bold}

Your solution will be verified by the output to the console from your query.

This exercise assumes a running MongoDB on your local machine. This means
the connection string will again be {yellow}{bold}'mongodb://127.0.0.1:27017/learnmymongodb'{/yellow}{/bold}.

----------------------------------------------------------------------
HINTS:

{grey}{italic}// Create a collection, test2{/grey}{/italic}
	{blue}{bold}db.createCollection('test2', function(err, collection) {
		if (err) console.warn(err.message);
	}){/blue}{/bold}

{grey}{italic}// Perform a simple insert into a collection, test2{/grey}{/italic}
  {blue}{bold}var collection = db.collection("test2");{/blue}{/bold}

{grey}{italic}// Insert a simple doc into the collection{/grey}{/italic}
{blue}{bold}{
  collection.insert({"Learning" : "MongoDB"}, {w:1}, function(err, result) {
    assert.equal(null, err);
  });{/blue}{/bold}

{grey}{italic}// To return a document excluding or including a specific field
you can use the "fields" attribute and supply it with a list of value to filter.{/grey}{/italic}
{blue}{bold}{
	collection.find({"Learning":"MongoDB"}, {"fields": {_id:0}});
  });{/blue}{/bold}

There are a variety of ways to use the insert functionality and a good
reference can be found at:
{yellow}http://mongodb.github.io/node-mongodb-native/markdown-docs/insert.html{/yellow}