In this exercise, you will use the database '{bold}learnmymongodb{/bold}' running on your localhost (127.0.0.1) on port 27017 for your solution with the collection 'userdetails' being where the user information is stored. 

You will need to create two indexes for this collection, perform three queries using these indexes with the explain() method and output the state (true or false) from MongoDB as to whether its query engine was able to use the specific index to both perform the query and then also to sort the data return within that query.

The existing documents in the collection 'userdetails' take the following format:

{blue}{bold}{ "firstname" : "tony",
	"lastname" : "smith", 
	"age" : 35, 
	"username" : "tsmith", 
	"email" : "tsmith@smith.com", 
	"_id" : ObjectId("XXXX") 
}{/blue}{/bold}

Stage 1 - You should add two indexes, the first on the field "age" and the
second on the fields "firstname", "secondname".

Stage 2 - You should perform three queries in the following order using the
explain() method and printing to the console the value returned in the field
"scanAndOrder" (either true or false).

i) The first query should query for all users / documents with an age field
value greater than or equal to 25. The query will be written similar to the
"basic_query" problem, however you will need to use the explain() method
parsing the data returned to get the "scanAndOrder" field's value.
ii) The second query should query for documents / users with the age being 35
or less and these results should be sorted by the fields (firstname, secondname) with the explain value of "scanAndOrder" being return to the console.
iii) The third query should query for documents / users with the the firstname
"dominic" and these results should be sorted by fields (firstname, secondname).
The query should print to console the value in the field "scanAndOrder".

Your answer to the exercise will be run against the official solution to ensure
that your query is targeting the correct age range of users.

This exercise assumes a running MongoDB on your local machine. This means
the connection string will again be {yellow}{bold}'mongodb://127.0.0.1:27017/learnmymongodb'{/yellow}{/bold}.
The collection will be {yellow}{bold}'userdetails'{/yellow}{/bold}.

----------------------------------------------------------------------
HINTS:

In this exercise, you will need to use the `collection.find()` with the operator $gte and $lte methods restricting the find to the range of ages specified. Each of the 3 (three) queries will use the explain() method and return to console the value in the field "scanAndOrder". For this exercise, prior to running the queries you will need to have setup 2 (two) indexes, the first index on the field "age" and the second index (compound) on the fields "firstname" and "secondname".

The createIndex document reference can be found at:
{yellow}http://mongodb.github.io/node-mongodb-native/api-generated/collection.html#createindex{/yellow}
and the explain method reference can be found at:
{yellow}http://mongodb.github.io/node-mongodb-native/api-generated/cursor.html#explain{/yellow}


